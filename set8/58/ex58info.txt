Exercise 58: 

Write a class Numbers with move and copy constructors and assignment
operators, and other specific member functions.

We do exactly this, writing our write() function such that it iterates over
d_size, and as such will not automatically show uninitialised memory. We run
the program through valgrind instead and see:

==71579== Conditional jump or move depends on uninitialised value(s)

==71579== Use of uninitialised value of size 8

==71579== Conditional jump or move depends on uninitialised value(s)
 
==71579== Conditional jump or move depends on uninitialised value(s)

This message pops up particularly whenever an object is being initialised
with the second constructor!

Of note is the fact we have left some commented lines in the move assignment
operator file, as when we used it inside our test program we noticed it was
actually just swapping the contents. Normally this is fine since the rhs of
the statement will go out of scope shortly after, but was nice and clean to
have an empty object left to be handled by the destructor. This however is not
needed, and as such we have omitted that code from the file.
