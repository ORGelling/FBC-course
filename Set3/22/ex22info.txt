Exercise 22:

Write a program that can solve the queueing riddle.

We write a program with various functions from general usage info, to showing
the queue, to sorting the order. These should for the most part speak for
themselves, but the orderSort() function has a few specific things we should
explain.

The way this solution works is that those at the front of the line will walk
to the back and cut into the queue just behind the last person with brown
eyes, so as to have a self-sorting queue without any of these people needing
to know their own eye colour. If they have brown eyes the next person will
sort themselves behind them, if they have blue eyes the next one will sort in
front of them.

We run the loop to do this by queueSize-1, since the last person in the queue
does not actually need to move. They will either be the last person with brown
eyes, or they will not. Either way the sorting works. We could even run the
loop by the index number of the last person with brown eyes, but this works
and is not necessarily much less efficient, unless the number of brown-eyed
people is very low compared to the queue size, and they all start near the 
beginning of the queue. We take this as an acceptable edge case.

We also added the optional input argument to seed the random number
generation, and added an option to select the distribution of blue and green
eyes, just for fun. Neither have to be used, if the latter isn't selected the
distribution is (close to) 50/50.
